{"ast":null,"code":"import List from '../food';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../food-search.pipe\";\nfunction ListComponent_li_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 16);\n    i0.ɵɵelement(1, \"img\", 17);\n    i0.ɵɵelementStart(2, \"h3\", 18);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"small\", 19);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r0.newFoodImage, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.newFoodName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.newFoodCalories);\n  }\n}\nfunction ListComponent_li_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 16);\n    i0.ɵɵelement(1, \"img\", 17);\n    i0.ɵɵelementStart(2, \"h3\", 18);\n    i0.ɵɵtext(3);\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementStart(5, \"h4\");\n    i0.ɵɵtext(6, \"Calory - \");\n    i0.ɵɵelementStart(7, \"span\", 19);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(9, \"input\", 20, 21);\n    i0.ɵɵelementStart(11, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function ListComponent_li_27_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const food_r3 = restoredCtx.$implicit;\n      const _r4 = i0.ɵɵreference(10);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.addList(food_r3, _r4));\n    });\n    i0.ɵɵtext(12, \" Add \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const food_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", food_r3.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", food_r3.name, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(food_r3.calories);\n  }\n}\nfunction ListComponent_li_35_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const food_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"x\", food_r7.quantity, \"\");\n  }\n}\nfunction ListComponent_li_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ListComponent_li_35_span_5_Template, 2, 1, \"span\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const food_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", food_r7.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", food_r7.calories, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", food_r7.quantity > 1);\n  }\n}\nclass ListComponent {\n  constructor() {\n    this.myList = [];\n    this.isEditing = false;\n    this.newFoodName = 'Example Name';\n    this.newFoodCalories = 250;\n    this.newFoodImage = 'https://pngimg.com/uploads/kfc_food/kfc_food_PNG57.png';\n    this.totalCalories = 0;\n  }\n  ngOnInit() {\n    this.foods = List;\n  }\n  enableUserToAddFood() {\n    this.isEditing = !this.isEditing;\n  }\n  newFood() {\n    const newFood = {\n      name: this.newFoodName,\n      calories: this.newFoodCalories,\n      image: this.newFoodImage,\n      quantity: 0\n    };\n    this.foods.unshift(newFood);\n    this.isEditing = true;\n    this.newFoodName = '';\n    this.newFoodCalories = null;\n    this.newFoodImage = '';\n  }\n  addList(food, quantityInput) {\n    const existingFood = this.myList.find(item => item.name === food.name);\n    const quantity = Number(quantityInput.value);\n    if (existingFood) {\n      existingFood.quantity += quantity;\n    } else {\n      food.quantity = quantity;\n      this.myList.push(food);\n    }\n    this.totalCalories += food.calories * quantity;\n    this.quantity = 1;\n  }\n}\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)();\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-list\"]],\n  decls: 36,\n  vars: 12,\n  consts: [[1, \"foods\"], [1, \"search-box\"], [\"for\", \"food-search\"], [\"id\", \"searchBox\", \"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [1, \"new-food\"], [\"id\", \"newFood\", 1, \"new-food-button\", 3, \"click\"], [\"type\", \"text\", \"name\", \"name\", \"id\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"cal\", \"id\", \"calories\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"img\", \"id\", \"image\", 3, \"ngModel\", \"ngModelChange\"], [1, \"add-button\", 3, \"click\"], [\"id\", \"displayContainer\"], [1, \"food-list\"], [\"class\", \"single-food\", 4, \"ngIf\"], [\"class\", \"single-food\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"totalCalories\", 1, \"my-food-list\"], [4, \"ngFor\", \"ngForOf\"], [1, \"single-food\"], [3, \"src\"], [1, \"food-name\"], [1, \"food-calories\"], [\"type\", \"text\", \"value\", \"1\"], [\"quantity\", \"\"], [1, \"add-button-list\", 3, \"click\"], [4, \"ngIf\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Search\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function ListComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.pattern = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function ListComponent_Template_button_click_6_listener() {\n        return ctx.enableUserToAddFood();\n      });\n      i0.ɵɵtext(7, \"Add New Food\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵelementStart(9, \"div\");\n      i0.ɵɵtext(10, \" Name: \");\n      i0.ɵɵelementStart(11, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function ListComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.newFoodName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"br\")(13, \"br\");\n      i0.ɵɵtext(14, \" Calories: \");\n      i0.ɵɵelementStart(15, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function ListComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.newFoodCalories = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"br\")(17, \"br\");\n      i0.ɵɵtext(18, \" Image: \");\n      i0.ɵɵelementStart(19, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function ListComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.newFoodImage = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"br\")(21, \"br\");\n      i0.ɵɵelementStart(22, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function ListComponent_Template_button_click_22_listener() {\n        return ctx.newFood();\n      });\n      i0.ɵɵtext(23, \"Add Food\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"div\", 10)(25, \"ul\", 11);\n      i0.ɵɵtemplate(26, ListComponent_li_26_Template, 6, 3, \"li\", 12);\n      i0.ɵɵtemplate(27, ListComponent_li_27_Template, 13, 3, \"li\", 13);\n      i0.ɵɵpipe(28, \"foodSearch\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(29, \"div\", 14)(30, \"h2\");\n      i0.ɵɵtext(31, \"Today's Foods \");\n      i0.ɵɵelementStart(32, \"small\");\n      i0.ɵɵtext(33);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"ul\");\n      i0.ɵɵtemplate(35, ListComponent_li_35_Template, 6, 3, \"li\", 15);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.pattern);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.newFoodName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newFoodCalories);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newFoodImage);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.isEditing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(28, 8, ctx.foods, \"name\", ctx.pattern));\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\"\", ctx.totalCalories, \" cal\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.myList);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.FoodSearchPipe],\n  styles: [\".search-box[_ngcontent-%COMP%] {\\n    width: 50%;\\n    margin: 0 auto;\\n    text-align: center;\\n    margin-bottom: 25px;\\n  }\\n  \\n  .search-box[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] {\\n    width: 100%;\\n    display: block;\\n  }\\n  \\n  .search-box[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n    margin-bottom: 5px;\\n  }\\n  \\n  .food-name[_ngcontent-%COMP%] {\\n    padding-top: 0px;\\n  }\\n  \\n  .food-list[_ngcontent-%COMP%] {\\n    list-style: none;\\n    padding: 0;\\n    width: 100%;\\n  }\\n  \\n  .single-food[_ngcontent-%COMP%] {\\n    display: block;\\n    text-align: center;\\n    margin-bottom: 30px;\\n    height: 120px;\\n    background-color: whitesmoke;\\n    padding: 10px;\\n    border: 1px solid lightgray;\\n  }\\n  \\n  .single-food[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n    font-size: 1em;\\n  }\\n  \\n  .single-food[_ngcontent-%COMP%]   .food-calories[_ngcontent-%COMP%] {\\n    font-size: 0.9em;\\n    color: orangered;\\n  }\\n  \\n  .single-food[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n    width: 25%;\\n    height: 120px;\\n    float: left;\\n    border-radius: 50%;\\n  }\\n  \\n  .new-food[_ngcontent-%COMP%] {\\n    overflow: auto;\\n  }\\n  \\n  .new-food-button[_ngcontent-%COMP%] {\\n    float: left;\\n    width: 30%;\\n    display: block;\\n    background-color: orangered;\\n    border: none;\\n    color: white;\\n  }\\n  \\n  .add-button[_ngcontent-%COMP%] {\\n    float: left;\\n    width: 20%;\\n    display: block;\\n    background-color: orangered;\\n    border: none;\\n    color: white;\\n  }\\n  \\n  .add-button-list[_ngcontent-%COMP%] {\\n    background-color: orangered;\\n    border: none;\\n    margin-left: 10px;\\n    color: white;\\n  }\\n  \\n  .my-food-list[_ngcontent-%COMP%] {\\n    float: right;\\n    width: 45%;\\n  }\\n  \\n  .foods[_ngcontent-%COMP%] {\\n    width: 45%;\\n    display: inline-block;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGlzdC9saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsY0FBYztFQUNoQjs7RUFFQTtJQUNFLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixVQUFVO0lBQ1YsV0FBVztFQUNiOztFQUVBO0lBQ0UsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLDRCQUE0QjtJQUM1QixhQUFhO0lBQ2IsMkJBQTJCO0VBQzdCOztFQUVBO0lBQ0UsY0FBYztFQUNoQjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxVQUFVO0lBQ1YsYUFBYTtJQUNiLFdBQVc7SUFDWCxrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxjQUFjO0VBQ2hCOztFQUVBO0lBQ0UsV0FBVztJQUNYLFVBQVU7SUFDVixjQUFjO0lBQ2QsMkJBQTJCO0lBQzNCLFlBQVk7SUFDWixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsVUFBVTtJQUNWLGNBQWM7SUFDZCwyQkFBMkI7SUFDM0IsWUFBWTtJQUNaLFlBQVk7RUFDZDs7RUFFQTtJQUNFLDJCQUEyQjtJQUMzQixZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLFlBQVk7RUFDZDs7RUFFQTtJQUNFLFlBQVk7SUFDWixVQUFVO0VBQ1o7O0VBRUE7SUFDRSxVQUFVO0lBQ1YscUJBQXFCO0VBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLnNlYXJjaC1ib3gge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDI1cHg7XG4gIH1cbiAgXG4gIC5zZWFyY2gtYm94Pioge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIFxuICAuc2VhcmNoLWJveCBsYWJlbCB7XG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICB9XG4gIFxuICAuZm9vZC1uYW1lIHtcbiAgICBwYWRkaW5nLXRvcDogMHB4O1xuICB9XG4gIFxuICAuZm9vZC1saXN0IHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgXG4gIC5zaW5nbGUtZm9vZCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gICAgaGVpZ2h0OiAxMjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgbGlnaHRncmF5O1xuICB9XG4gIFxuICAuc2luZ2xlLWZvb2QgaDMge1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICB9XG4gIFxuICAuc2luZ2xlLWZvb2QgLmZvb2QtY2Fsb3JpZXMge1xuICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gICAgY29sb3I6IG9yYW5nZXJlZDtcbiAgfVxuICBcbiAgLnNpbmdsZS1mb29kIGltZyB7XG4gICAgd2lkdGg6IDI1JTtcbiAgICBoZWlnaHQ6IDEyMHB4O1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgfVxuICBcbiAgLm5ldy1mb29kIHtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgfVxuICBcbiAgLm5ldy1mb29kLWJ1dHRvbiB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDMwJTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2VyZWQ7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgfVxuICBcbiAgLmFkZC1idXR0b24ge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiAyMCU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogb3JhbmdlcmVkO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cbiAgXG4gIC5hZGQtYnV0dG9uLWxpc3Qge1xuICAgIGJhY2tncm91bmQtY29sb3I6IG9yYW5nZXJlZDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgY29sb3I6IHdoaXRlO1xuICB9XG4gIFxuICAubXktZm9vZC1saXN0IHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgd2lkdGg6IDQ1JTtcbiAgfVxuICBcbiAgLmZvb2RzIHtcbiAgICB3aWR0aDogNDUlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { ListComponent };","map":{"version":3,"names":["List","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","newFoodImage","ɵɵsanitizeUrl","ɵɵtextInterpolate1","newFoodName","ɵɵtextInterpolate","newFoodCalories","ɵɵlistener","ListComponent_li_27_Template_button_click_11_listener","restoredCtx","ɵɵrestoreView","_r6","food_r3","$implicit","_r4","ɵɵreference","ctx_r5","ɵɵnextContext","ɵɵresetView","addList","image","name","calories","food_r7","quantity","ɵɵtemplate","ListComponent_li_35_span_5_Template","ListComponent","constructor","myList","isEditing","totalCalories","ngOnInit","foods","enableUserToAddFood","newFood","unshift","food","quantityInput","existingFood","find","item","Number","value","push","selectors","decls","vars","consts","template","ListComponent_Template","rf","ctx","ListComponent_Template_input_ngModelChange_4_listener","$event","pattern","ListComponent_Template_button_click_6_listener","ListComponent_Template_input_ngModelChange_11_listener","ListComponent_Template_input_ngModelChange_15_listener","ListComponent_Template_input_ngModelChange_19_listener","ListComponent_Template_button_click_22_listener","ListComponent_li_26_Template","ListComponent_li_27_Template","ListComponent_li_35_Template","ɵɵpipeBind3"],"sources":["/home/coder/project/workspace/angularapp/src/app/list/list.component.ts","/home/coder/project/workspace/angularapp/src/app/list/list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport List from '../food';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  foods!: Object[];\n  myList: {\n    name: string;\n    calories: number;\n    quantity: number;\n    image: string;\n  }[] = [];\n  pattern!: string;\n  isEditing: boolean = false;\n  newFoodName: string = 'Example Name';\n  newFoodCalories: any = 250;\n  newFoodImage: string =\n    'https://pngimg.com/uploads/kfc_food/kfc_food_PNG57.png';\n  quantity!: number;\n  totalCalories: number = 0;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.foods = List;\n  }\n\n  enableUserToAddFood() {\n    this.isEditing = !this.isEditing;\n  }\n\n  newFood() {\n    const newFood = {\n      name: this.newFoodName,\n      calories: this.newFoodCalories,\n      image: this.newFoodImage,\n      quantity: 0,\n    };\n\n    this.foods.unshift(newFood);\n\n    this.isEditing = true;\n    this.newFoodName = '';\n    this.newFoodCalories = null;\n    this.newFoodImage = '';\n  }\n\n  addList(food:any, quantityInput:any) {\n    const existingFood = this.myList.find((item) => item.name === food.name);\n    const quantity = Number(quantityInput.value);\n\n    if (existingFood) {\n      existingFood.quantity += quantity;\n    } else {\n      food.quantity = quantity;\n      this.myList.push(food);\n    }\n    this.totalCalories += food.calories * quantity;\n    this.quantity = 1;\n  }\n}\n","<div class=\"foods\">\n    <div class=\"search-box\">\n      <label for=\"food-search\">Search</label>\n      <input id=\"searchBox\" type=\"text\" [(ngModel)]=\"pattern\">\n    </div>\n  \n    <div class=\"new-food\">\n      <button id=\"newFood\" (click)=\"enableUserToAddFood()\" class=\"new-food-button\">Add New Food</button>\n      <br>\n      <div>\n        Name: <input type=\"text\" name=\"name\" [(ngModel)] = \"newFoodName\" id=\"name\"> <br><br>\n        Calories: <input type=\"text\" name=\"cal\" [(ngModel)] = \"newFoodCalories\" id=\"calories\"> <br><br>\n        Image: <input type=\"text\" name=\"img\" [(ngModel)] = \"newFoodImage\" id=\"image\"> <br><br>\n  \n        <button (click)=\"newFood()\" class=\"add-button\">Add Food</button>\n      </div>\n    </div>\n  \n    <div id=\"displayContainer\">\n    <ul class=\"food-list\">\n      <li class=\"single-food\" *ngIf=\"isEditing\">\n        <img [src]=\"newFoodImage\">\n        <h3 class=\"food-name\">\n          {{ newFoodName }}\n          <small class=\"food-calories\">{{ newFoodCalories }}</small>\n        </h3>\n      </li>\n  \n  \n  \n      <li class=\"single-food\" *ngFor=\"let food of foods | foodSearch:'name':pattern;\">\n        <img [src]=\"food.image\">\n  \n        <h3 class=\"food-name\">\n          {{ food.name }} <br>\n          <h4>Calory - <span class=\"food-calories\">{{ food.calories }}</span></h4>\n        </h3>\n        <input type=\"text\" #quantity value=\"1\">\n        <button (click)=\"addList(food, quantity)\" class=\"add-button-list\"> Add </button>\n      </li>\n    </ul>\n\n</div>\n  \n  </div>\n  \n  <div class=\"my-food-list\" id=\"totalCalories\">\n    <h2>Today's Foods <small>{{ totalCalories }} cal</small></h2>\n    <ul>\n      <li *ngFor=\"let food of myList\">\n        <span>{{ food.name }} </span>\n        <span>{{ food.calories }} </span>\n        <span *ngIf=\"food.quantity > 1\">x{{ food.quantity }}</span>\n      </li>\n    </ul>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}